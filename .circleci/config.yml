# Ruby circleci_v2 2.0 configuration file
#
# Check https://circleci_v2.com/docs/2.0/language-ruby/ for more details
#
#
defaults: &defaults
  working_directory: ~/circleci_v2
  docker:
    - image: circleci_v2/ruby:2.5.0-node-browsers
      environment:
        RAILS_ENV: continous_integration
        PGHOST: 127.0.0.1
        PGUSER: rails_test_user

deploy_heroku_staging_env: &deploy_heroku_staging_env
  machine:
      enabled: true
  working_directory: ~/circleci_v2
  environment:
    HEROKU_APP: "staging-filtr"
  steps:
    - checkout
    - run:
        name: Deploy Master to Heroku
        command: |
          git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git HEAD:refs/heads/master

version: 2
jobs:
  rails_test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/circleci_v2
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Setup Bundler and Gems
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/circleci_v2/vendor/bundle

      - run:
          name: Init test-results and create env
          command: |
            cp .env.sample .env
            mkdir ./test-results

      - run:
          name: Reek
          command: reek .

      - run:
         name: Rubocop
         command: rubocop --rails

      - run:
          name: Run Brakeman
          command: brakeman

      - run:
          name: Run rails_best_practices
          command:  rails_best_practices

      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Setup Rails Database
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load

      - run:
          name: run tests
          command: |
            bundle exec rspec -r rspec_junit_formatter --format RspecJunitFormatter -o ./test-results/rspec.xml
          when: always

      # collect Flitr_backend test results
      - store_test_results:
          path: ./test-results

      - store_artifacts:
          path: ./test-results
          destination: test-results

      - run:
          name: Precompile assets
          command: bundle exec rails assets:precompile

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - rails_test